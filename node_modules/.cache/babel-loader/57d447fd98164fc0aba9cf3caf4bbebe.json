{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//引入组件\nimport pubsub from 'pubsub-js';\nimport MyHeader from \"./components/MyHeader\";\nimport MyList from \"./components/MyList\";\nimport MyFooter from \"./components/MyFooter\";\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    };\n  },\n\n  components: {\n    MyHeader,\n    MyList,\n    MyFooter\n  },\n  methods: {\n    //接收Header中传递过来的数据并进行添加\n    addTodo(todoObj) {\n      if (!this.todos) {\n        try {\n          this.todos.forEach(todo => {\n            if (todoObj.title.trim() === todo.title) {\n              throw new Error('true');\n            }\n\n            todo.unshift(todoObj);\n          });\n        } catch (error) {\n          if (error.message == 'true') {\n            return alert('输入的任务名称已经存在');\n          }\n        }\n      } else {\n        this.todos.unshift(todoObj);\n      } // console.log(todoObj);\n\n    },\n\n    //勾选or取消勾选一个todo\n    checkTodo(id) {\n      this.todos.forEach(todo => {\n        if (todo.id === id) {\n          todo.done = !todo.done;\n        }\n      });\n    },\n\n    //更新一个Todo\n    updataTodo(id, title) {\n      this.todos.forEach(todo => {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n      });\n    },\n\n    //删除\n    deleteTodo(_, id) {\n      this.todos = this.todos.filter(todo => todo.id !== id);\n    },\n\n    //全选or取消全选\n    checkAllTodo(done) {\n      this.todos.forEach(todo => {\n        todo.done = done;\n      });\n    },\n\n    //清除所有选中的\n    clearAllTodo() {\n      this.todos = this.todos.filter(todo => {\n        return todo.done === false;\n      });\n    }\n\n  },\n  watch: {\n    //开启深度监视\n    todos: {\n      deep: true,\n\n      handler(value) {\n        localStorage.setItem('todos', JSON.stringify(value));\n      }\n\n    }\n  },\n\n  mounted() {\n    this.$bus.$on('checkTodo', this.checkTodo); // this.$bus.$on('deleteTodo',this.deleteTodo)\n\n    this.$bus.$on('updataTodo', this.updataTodo);\n    this.pubId = pubsub.subscribe('deleteTodo', this.deleteTodo);\n  },\n\n  beforeDestroy() {\n    this.$bus.$off('checkTodo');\n    this.$bus.$off('updataTodo');\n    pubsub.unsubscribe(this.pubId);\n  }\n\n};","map":{"version":3,"mappings":";AAaA;AACA;AACA;AACA;AACA;AAEA;EACAA,WADA;;EAEAC;IACA;MACAC;IADA;EAGA,CANA;;EAOAC;IACAC,QADA;IAEAC,MAFA;IAGAC;EAHA,CAPA;EAYAC;IACA;IACAC;MACA;QACA;UACA;YACA;cACA;YACA;;YACAC;UACA,CALA;QAMA,CAPA,CAOA;UACA;YACA;UACA;QACA;MACA,CAbA,MAaA;QACA;MACA,CAhBA,CAkBA;;IACA,CArBA;;IAsBA;IACAC;MACA;QACA;UACAD;QACA;MACA,CAJA;IAKA,CA7BA;;IA8BA;IACAE;MACA;QACA;UACAF;QACA;MACA,CAJA;IAKA,CArCA;;IAsCA;IACAG;MACA;IACA,CAzCA;;IA0CA;IACAC;MACA;QACAJ;MACA,CAFA;IAGA,CA/CA;;IAgDA;IACAK;MACA;QACA;MACA,CAFA;IAGA;;EArDA,CAZA;EAmEAC;IACA;IACAb;MACAc,UADA;;MAEAC;QACAC;MACA;;IAJA;EAFA,CAnEA;;EA4EAC;IACA,2CADA,CAEA;;IACA;IAEA;EACA,CAlFA;;EAmFAC;IACA;IACA;IACAC;EACA;;AAvFA","names":["name","data","todos","components","MyHeader","MyList","MyFooter","methods","addTodo","todo","checkTodo","updataTodo","deleteTodo","checkAllTodo","clearAllTodo","watch","deep","handler","localStorage","mounted","beforeDestroy","pubsub"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div id=\"root\">\r\n    <div class=\"todo-container\">\r\n      <div class=\"todo-wrap\">\r\n        <MyHeader @addTodo=\"addTodo\" :todos=\"todos\"></MyHeader>\r\n        <MyList :todos=\"todos\"></MyList>\r\n        <MyFooter :todos=\"todos\" @checkAllTodo=\"checkAllTodo\" @clearAllTodo=\"clearAllTodo\"></MyFooter>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//引入组件\r\nimport pubsub from 'pubsub-js'\r\nimport MyHeader from \"./components/MyHeader\";\r\nimport MyList from \"./components/MyList\";\r\nimport MyFooter from \"./components/MyFooter\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      todos:JSON.parse(localStorage.getItem('todos')) || []\r\n    }\r\n  },\r\n  components: {\r\n    MyHeader,\r\n    MyList,\r\n    MyFooter,\r\n  },\r\n  methods:{\r\n    //接收Header中传递过来的数据并进行添加\r\n    addTodo(todoObj){\r\n      if(!this.todos){\r\n          try {\r\n            this.todos.forEach((todo)=>{\r\n            if(todoObj.title.trim() === todo.title){\r\n              throw new Error('true')\r\n            }\r\n            todo.unshift(todoObj)\r\n          })\r\n        } catch (error) {\r\n          if(error.message == 'true'){\r\n            return alert('输入的任务名称已经存在')\r\n          }\r\n        }\r\n      }else{\r\n        this.todos.unshift(todoObj)\r\n      }\r\n      \r\n      // console.log(todoObj);\r\n    },\r\n    //勾选or取消勾选一个todo\r\n    checkTodo(id){\r\n      this.todos.forEach((todo)=>{\r\n        if(todo.id === id){\r\n          todo.done = !todo.done\r\n        }\r\n      })\r\n    },\r\n    //更新一个Todo\r\n    updataTodo(id,title){\r\n      this.todos.forEach((todo)=>{\r\n        if(todo.id === id){\r\n          todo.title = title\r\n        }\r\n      })\r\n    },\r\n    //删除\r\n    deleteTodo(_,id){\r\n      this.todos = this.todos.filter(todo=>todo.id !== id)\r\n    },\r\n    //全选or取消全选\r\n    checkAllTodo(done){\r\n      this.todos.forEach((todo)=>{\r\n        todo.done = done\r\n      })\r\n    },\r\n    //清除所有选中的\r\n    clearAllTodo(){\r\n      this.todos =  this.todos.filter((todo)=>{\r\n          return todo.done === false\r\n        })\r\n    }\r\n  },\r\n  watch:{\r\n    //开启深度监视\r\n    todos:{\r\n      deep:true,\r\n      handler(value){\r\n        localStorage.setItem('todos',JSON.stringify(value))\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$bus.$on('checkTodo',this.checkTodo)\r\n    // this.$bus.$on('deleteTodo',this.deleteTodo)\r\n    this.$bus.$on('updataTodo',this.updataTodo)\r\n\r\n    this.pubId = pubsub.subscribe('deleteTodo',this.deleteTodo)\r\n  },\r\n  beforeDestroy(){\r\n    this.$bus.$off('checkTodo')\r\n    this.$bus.$off('updataTodo')\r\n    pubsub.unsubscribe(this.pubId)\r\n  }\r\n};\r\n</script>\r\n<style>\r\n/*base*/\r\nbody {\r\n  background: #fff;\r\n}\r\n.btn {\r\n  display: inline-block;\r\n  padding: 4px 12px;\r\n  margin-bottom: 0;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),\r\n    0 1px 2px rgba(0, 0, 0, 0.05);\r\n  border-radius: 4px;\r\n}\r\n.btn-danger {\r\n  color: #fff;\r\n  background-color: #da4f49;\r\n  border: 1px solid #bd362f;\r\n}\r\n.btn-edit{\r\n  color: #fff;\r\n  background-color: skyblue;\r\n  border: 1px solid rgb(103, 155, 175);\r\n  margin-right: 5px;\r\n}\r\n.btn-danger:hover {\r\n  color: #fff;\r\n  background-color: #bd362f;\r\n}\r\n.btn:focus {\r\n  outline: none;\r\n}\r\n.todo-container {\r\n  width: 600px;\r\n  margin: 0 auto;\r\n}\r\n.todo-container .todo-wrap {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}