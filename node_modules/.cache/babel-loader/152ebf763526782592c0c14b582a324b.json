{"ast":null,"code":"//引入消息与订阅\nimport pubsub from 'pubsub-js';\nexport default {\n  name: \"MyItem\",\n  //声明接收todo对象\n  props: ['todo'],\n  methods: {\n    //勾选or取消勾选\n    handleCheck(id) {\n      //通知App组件将对应的todo对象的done值取反\n      // this.checkTodo(id)\n      this.$bus.$emit('checkTodo', id);\n    },\n\n    //删除\n    handleDelete(id) {\n      if (confirm('确定删除吗?')) {\n        // this.deleteTodo(id)\n        // this.$bus.$emit('deleteTodo',id)\n        pubsub.publish('deleteTodo', id);\n      }\n    },\n\n    //编辑\n    handleEdit(todo) {\n      if (todo.hasOwnProperty('isEdit')) {\n        todo.isEdit = true;\n      } else {\n        this.$set(todo, 'isEdit', true);\n      }\n    },\n\n    //失去焦点回调(真正执行修改逻辑)\n    handleBlur(todo, e) {\n      todo.isEdit = false;\n      if (!e.target.value.trim()) return alert('输入不能为空!');\n      this.$bus.$emit('updataTodo', todo.id, e.target.value);\n    }\n\n  },\n\n  mounted() {\n    this.$refs.inputTitle.focus();\n  }\n\n};","map":{"version":3,"mappings":"AAmBA;AACA;AACA;EACAA,cADA;EAEA;EACAC,eAHA;EAIAC;IACA;IACAC;MACA;MACA;MACA;IACA,CANA;;IAOA;IACAC;MACA;QACA;QACA;QACAC;MACA;IACA,CAdA;;IAeA;IACAC;MACA;QACAC;MACA,CAFA,MAEA;QACA;MACA;IAGA,CAxBA;;IAyBA;IACAC;MACAD;MACA;MACA;IACA;;EA9BA,CAJA;;EAoCAE;IACA;EACA;;AAtCA","names":["name","props","methods","handleCheck","handleDelete","pubsub","handleEdit","todo","handleBlur","mounted"],"sourceRoot":"src/components","sources":["MyItem.vue"],"sourcesContent":["<template>\r\n  <li>\r\n    <label>\r\n      <input type=\"checkbox\" :checked=\"todo.done\" @change=\"handleCheck(todo.id)\"/>\r\n      <!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props -->\r\n      <!-- <input type=\"checkbox\" v-model=\"todo.done\"/> -->\r\n      <span v-show=\"!todo.isEdit\">{{todo.title}}</span>\r\n      <input v-show=\"todo.isEdit\" \r\n      type=\"text\" \r\n      :value=\"todo.title\" \r\n      @blur=\"handleBlur(todo,$event)\" ref=\"inputTitle\" />\r\n    </label>\r\n    <button class=\"btn btn-danger\" @click=\"handleDelete(todo.id)\" >删除</button>\r\n    <button v-show=\"!todo.isEdit\" class=\"btn btn-edit\" @click=\"handleEdit(todo)\">编辑</button>\r\n    \r\n  </li>\r\n</template>\r\n\r\n<script>\r\n//引入消息与订阅\r\nimport pubsub from 'pubsub-js'\r\nexport default {\r\n  name: \"MyItem\",\r\n  //声明接收todo对象\r\n  props:['todo'],\r\n  methods:{\r\n    //勾选or取消勾选\r\n    handleCheck(id){\r\n      //通知App组件将对应的todo对象的done值取反\r\n      // this.checkTodo(id)\r\n      this.$bus.$emit('checkTodo',id)\r\n    },\r\n    //删除\r\n    handleDelete(id){\r\n      if(confirm('确定删除吗?')){\r\n        // this.deleteTodo(id)\r\n        // this.$bus.$emit('deleteTodo',id)\r\n        pubsub.publish('deleteTodo',id)\r\n      }\r\n    },\r\n    //编辑\r\n    handleEdit(todo){\r\n      if(todo.hasOwnProperty('isEdit')){\r\n        todo.isEdit = true\r\n      }else{\r\n        this.$set(todo,'isEdit',true)\r\n      }\r\n      \r\n    \r\n    },\r\n    //失去焦点回调(真正执行修改逻辑)\r\n    handleBlur(todo,e){\r\n      todo.isEdit = false\r\n      if(!e.target.value.trim()) return alert('输入不能为空!')\r\n      this.$bus.$emit('updataTodo',todo.id,e.target.value)\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$refs.inputTitle.focus()\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/*item*/\r\nli {\r\n  list-style: none;\r\n  height: 36px;\r\n  line-height: 36px;\r\n  padding: 0 5px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nli label {\r\n  float: left;\r\n  cursor: pointer;\r\n}\r\n\r\nli label li input {\r\n  vertical-align: middle;\r\n  margin-right: 6px;\r\n  position: relative;\r\n  top: -1px;\r\n}\r\n\r\nli button {\r\n  float: right;\r\n  display: none;\r\n  margin-top: 3px;\r\n}\r\n\r\nli:before {\r\n  content: initial;\r\n}\r\n\r\nli:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\nli:hover{\r\n  background-color: #ddd;\r\n}\r\nli:hover button{\r\n  display: block;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}