{"ast":null,"code":"// 该文件专门用于创建整个应用的路由器\n//引入vue-router\nimport vueRouter from 'vue-router'; //引入组件\n\nimport About from \"../pages/About\";\nimport Home from \"../pages/Home\";\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail'; //创建并暴露一个路由器\n\nconst router = new vueRouter({\n  routes: [{\n    name: 'guanyu',\n    path: '/about',\n    component: About,\n    meta: {\n      isAuth: true,\n      title: '关于'\n    }\n  }, {\n    name: 'zhuye',\n    path: '/home',\n    component: Home,\n    meta: {\n      title: '主页'\n    },\n    children: [{\n      name: 'xinwen',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: '新闻'\n      },\n      //独享路由守卫\n      beforeEnter: (to, from, next) => {\n        if (to.meta.isAuth) {\n          //判断是否需要鉴权\n          if (localStorage.getItem('school') === 'atguigu') {\n            next();\n          } else {\n            alert('学校名不对，没有权限访问');\n          }\n        } else {\n          next();\n        }\n      }\n    }, {\n      name: 'xiaoxi',\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: true,\n        title: '消息'\n      },\n      children: [{\n        name: 'qingqiu',\n        path: 'detail/:id/:title',\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: '详情'\n        },\n\n        //props的第一种写法，值为对象,该对象中的所有key-value都会以props的形式传给Detail组件。\n\n        /* props:{\r\n          a:1,\r\n          b:'hello'\r\n        } */\n        // props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件。\n        // props:true\n        // props的第三种写法，值为函数,该函数返回的对象中每一组key-value都会通过props传给Detail组件\n        props($route) {\n          return {\n            id: $route.params.id,\n            title: $route.params.title\n          };\n        }\n\n      }]\n    }]\n  }]\n}); //全局前置路由守卫——初始化的时候被调用、每次路由切换之前被调用\n\n/* router.beforeEach((to,from,next)=>{\r\n  if(to.meta.isAuth){//判断是否需要鉴权\r\n    if(localStorage.getItem('school') === 'atguigu'){\r\n      next()\r\n    }else{\r\n      alert('学校名不对，没有权限访问')\r\n    }\r\n  }else{\r\n    next()\r\n  }\r\n}) */\n//全局后置路由守卫——初始化的时候被调用、每次路由切换之后被调用\n\nrouter.afterEach((to, from) => {\n  // console.log(to,from);\n  document.title = to.meta.title || '系统';\n});\nexport default router;","map":{"version":3,"names":["vueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","meta","isAuth","title","children","beforeEnter","to","from","next","localStorage","getItem","alert","props","$route","id","params","afterEach","document"],"sources":["F:/vue_test/src/router/index.js"],"sourcesContent":["// 该文件专门用于创建整个应用的路由器\r\n\r\n//引入vue-router\r\nimport vueRouter from 'vue-router'\r\n//引入组件\r\nimport About from \"../pages/About\";\r\nimport Home from \"../pages/Home\";\r\nimport News from '../pages/News';\r\nimport Message from '../pages/Message';\r\nimport Detail from '../pages/Detail';\r\n\r\n\r\n//创建并暴露一个路由器\r\nconst router = new vueRouter({\r\n  routes:[\r\n    {\r\n      name:'guanyu',\r\n      path:'/about',\r\n      component:About,\r\n      meta:{isAuth:true,title:'关于'}\r\n    },\r\n    {\r\n      name:'zhuye',\r\n      path:'/home',\r\n      component:Home,\r\n      meta:{title:'主页'},\r\n      children:[\r\n        {\r\n          name:'xinwen',\r\n          path:'news',\r\n          component:News,\r\n          meta:{isAuth:true,title:'新闻'},\r\n          //独享路由守卫\r\n          beforeEnter:(to,from,next)=>{\r\n            if(to.meta.isAuth){//判断是否需要鉴权\r\n              if(localStorage.getItem('school') === 'atguigu'){\r\n                next()\r\n              }else{\r\n                alert('学校名不对，没有权限访问')\r\n              }\r\n            }else{\r\n              next()\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name:'xiaoxi',\r\n          path:'message',\r\n          component:Message,\r\n          meta:{isAuth:true,title:'消息'},\r\n          children:[\r\n            {\r\n              name:'qingqiu',\r\n              path:'detail/:id/:title',\r\n              component:Detail,\r\n              meta:{isAuth:true,title:'详情'},\r\n              //props的第一种写法，值为对象,该对象中的所有key-value都会以props的形式传给Detail组件。\r\n              /* props:{\r\n                a:1,\r\n                b:'hello'\r\n              } */\r\n              // props的第二种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有params参数，以props的形式传给Detail组件。\r\n              // props:true\r\n\r\n              // props的第三种写法，值为函数,该函数返回的对象中每一组key-value都会通过props传给Detail组件\r\n              props($route){\r\n                return {\r\n                  id:$route.params.id,title:$route.params.title\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n})\r\n//全局前置路由守卫——初始化的时候被调用、每次路由切换之前被调用\r\n/* router.beforeEach((to,from,next)=>{\r\n  if(to.meta.isAuth){//判断是否需要鉴权\r\n    if(localStorage.getItem('school') === 'atguigu'){\r\n      next()\r\n    }else{\r\n      alert('学校名不对，没有权限访问')\r\n    }\r\n  }else{\r\n    next()\r\n  }\r\n}) */\r\n\r\n//全局后置路由守卫——初始化的时候被调用、每次路由切换之后被调用\r\nrouter.afterEach((to,from)=>{\r\n  // console.log(to,from);\r\n  document.title = to.meta.title || '系统'\r\n})\r\n\r\n\r\nexport default router"],"mappings":"AAAA;AAEA;AACA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAGA;;AACA,MAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAc;EAC3BO,MAAM,EAAC,CACL;IACEC,IAAI,EAAC,QADP;IAEEC,IAAI,EAAC,QAFP;IAGEC,SAAS,EAACT,KAHZ;IAIEU,IAAI,EAAC;MAACC,MAAM,EAAC,IAAR;MAAaC,KAAK,EAAC;IAAnB;EAJP,CADK,EAOL;IACEL,IAAI,EAAC,OADP;IAEEC,IAAI,EAAC,OAFP;IAGEC,SAAS,EAACR,IAHZ;IAIES,IAAI,EAAC;MAACE,KAAK,EAAC;IAAP,CAJP;IAKEC,QAAQ,EAAC,CACP;MACEN,IAAI,EAAC,QADP;MAEEC,IAAI,EAAC,MAFP;MAGEC,SAAS,EAACP,IAHZ;MAIEQ,IAAI,EAAC;QAACC,MAAM,EAAC,IAAR;QAAaC,KAAK,EAAC;MAAnB,CAJP;MAKE;MACAE,WAAW,EAAC,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAgB;QAC1B,IAAGF,EAAE,CAACL,IAAH,CAAQC,MAAX,EAAkB;UAAC;UACjB,IAAGO,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmC,SAAtC,EAAgD;YAC9CF,IAAI;UACL,CAFD,MAEK;YACHG,KAAK,CAAC,cAAD,CAAL;UACD;QACF,CAND,MAMK;UACHH,IAAI;QACL;MACF;IAhBH,CADO,EAmBP;MACEV,IAAI,EAAC,QADP;MAEEC,IAAI,EAAC,SAFP;MAGEC,SAAS,EAACN,OAHZ;MAIEO,IAAI,EAAC;QAACC,MAAM,EAAC,IAAR;QAAaC,KAAK,EAAC;MAAnB,CAJP;MAKEC,QAAQ,EAAC,CACP;QACEN,IAAI,EAAC,SADP;QAEEC,IAAI,EAAC,mBAFP;QAGEC,SAAS,EAACL,MAHZ;QAIEM,IAAI,EAAC;UAACC,MAAM,EAAC,IAAR;UAAaC,KAAK,EAAC;QAAnB,CAJP;;QAKE;;QACA;AACd;AACA;AACA;QACc;QACA;QAEA;QACAS,KAAK,CAACC,MAAD,EAAQ;UACX,OAAO;YACLC,EAAE,EAACD,MAAM,CAACE,MAAP,CAAcD,EADZ;YACeX,KAAK,EAACU,MAAM,CAACE,MAAP,CAAcZ;UADnC,CAAP;QAGD;;MAlBH,CADO;IALX,CAnBO;EALX,CAPK;AADoB,CAAd,CAAf,C,CAgEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAP,MAAM,CAACoB,SAAP,CAAiB,CAACV,EAAD,EAAIC,IAAJ,KAAW;EAC1B;EACAU,QAAQ,CAACd,KAAT,GAAiBG,EAAE,CAACL,IAAH,CAAQE,KAAR,IAAiB,IAAlC;AACD,CAHD;AAMA,eAAeP,MAAf"},"metadata":{},"sourceType":"module"}